{"version":3,"sources":["pages/books/Books.tsx","pages/books/Book.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Books","useState","books","setBooks","useEffect","fetchBooks","a","axios","get","data","map","book","to","path","name","withRouter","match","console","log","App","basename","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOA8BeA,EArBD,WAAO,IAAD,EACQC,mBAAsB,IAD9B,mBACXC,EADW,KACJC,EADI,KAGlBC,qBAAU,WACRC,MACC,IAEH,IAAMA,EAAU,uCAAG,4BAAAC,EAAA,sEACGC,IAAMC,IAAI,oCADb,OACXN,EADW,OAEjBC,EAASD,EAAMO,MAFE,2CAAH,qDAKhB,OACE,8BACGP,EAAMQ,KAAI,SAACC,GAAD,OACT,cAAC,IAAD,CAAMC,GAAID,EAAKE,KAAf,SAAsBF,EAAKG,a,OCTpBC,eALF,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MAEd,OADAC,QAAQC,IAAIF,GACL,yCCYMG,MAlBf,WACE,OACE,8BACE,eAAC,IAAD,CAAQC,SAAS,SAAjB,UACE,cAAC,IAAD,CAAMR,GAAG,SAAT,mBACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOS,OAAK,EAACR,KAAK,SAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOQ,OAAK,EAACR,KAAK,cAAlB,SACE,cAAC,EAAD,eCFGS,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.94c3e162.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\ninterface book {\n  name: string;\n  path: string;\n}\n\nconst Books = () => {\n  const [books, setBooks] = useState<book[] | []>([]);\n\n  useEffect(() => {\n    fetchBooks();\n  }, []);\n\n  const fetchBooks = async () => {\n    const books = await axios.get(\"http://localhost:5000/books.json\");\n    setBooks(books.data);\n  };\n\n  return (\n    <div>\n      {books.map((book: book) => (\n        <Link to={book.path}>{book.name}</Link>\n      ))}\n    </div>\n  );\n};\n\nexport default Books;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport { withRouter } from \"react-router\";\n\ntype Params = {\n  name?: string;\n};\n\ninterface props extends RouteComponentProps<Params> {}\n\nconst Book = ({ match }: props) => {\n  console.log(match);\n  return <div>lol</div>;\n};\n\nexport default withRouter(Book);\n","import React from \"react\";\nimport Books from \"./pages/books/Books\";\n\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Book from \"./pages/books/Book\";\n\nfunction App() {\n  return (\n    <div>\n      <Router basename=\"/books\">\n        <Link to=\"/books\">Books</Link>\n        <Switch>\n          <Route exact path=\"/books\">\n            <Books />\n          </Route>\n          <Route exact path=\"/book/:name\">\n            <Book />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}